<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" creationComplete="init()" width="350" height="280" backgroundGradientAlphas="[1.0, 1.0]" backgroundGradientColors="[#FFFCFC, #FFFCFC]">

<mx:Script>
<![CDATA[

	import flash.net.NetConnection;
	import flash.external.*;

	[Bindable]
	private var netConnection:NetConnection = null;
	private var incomingNetStream:NetStream = null;
	private var outgoingNetStream:NetStream = null;

	private var isConnected:Boolean = false;
	private var mic:Microphone = null;

	public var username:String;

	

	private function init():void {
		simpleLabel.text="Waiting....."

		initMicrophone();			

		NetConnection.defaultObjectEncoding = flash.net.ObjectEncoding.AMF0;	
		netConnection = new NetConnection();
		netConnection.objectEncoding = ObjectEncoding.AMF0;
		netConnection.client = this;
		netConnection.addEventListener( NetStatusEvent.NET_STATUS , netStatus );
		netConnection.addEventListener(SecurityErrorEvent.SECURITY_ERROR, securityErrorHandler);		
	}

	private function connect():void {
		netConnection.connect(txtRed5URL.text);
	}

	private function register():void {
		netConnection.call("register", null, txtUser.text);
	}

	private function initMicrophone():void {
		mic = Microphone.getMicrophone();

		if(mic == null){
			trace("No available microphone");
		} else {
			mic.setUseEchoSuppression(true);
			mic.setLoopBack(false);
			mic.setSilenceLevel(10);
			mic.gain = 60;
			mic.rate = 8;
			mic.addEventListener(ActivityEvent.ACTIVITY, micActivityHandler);
			mic.addEventListener(StatusEvent.STATUS, micStatusHandler);
		}
	}							



	private function micActivityHandler(event:ActivityEvent):void {
		//simpleLabel.text= "activityHandler: " + event;
	}


	private function micStatusHandler(event:StatusEvent):void {		
		switch(event.code) {

		case "Microphone.Muted":
			break;
		case "Microphone.Unmuted":
			break;
		default:
			trace("unknown micStatusHandler event: " + event);
		}
	}


	private function netStatus (evt:NetStatusEvent ):void {		    	
		switch(evt.info.code) {
		
		case "NetConnection.Connect.Success":
			simpleLabel.text="Connection success!"; 
			netConnection.call("login", null, txtUser.text, txtPassword.text, txtRealm.text, txtServer.text);										
			break;

		case "NetConnection.Connect.Failed":
			simpleLabel.text="Failed to connect";
			break;

		case "NetConnection.Connect.Rejected":
			simpleLabel.text="Rejected";
			break;

		case "NetStream.Play.StreamNotFound":
			simpleLabel.text="No Stream";
			break;

		case "NetStream.Play.Failed":
			simpleLabel.text="Play error";
			netConnection.call("streamStatus", null, txtUser.text, "failed");			
			break;
			
		case "NetStream.Play.Start":		
			simpleLabel.text="Play start";
			netConnection.call("streamStatus", null, txtUser.text, "start");
			
			break;
		case "NetStream.Play.Stop":			
			simpleLabel.text="Play stop";
			netConnection.call("streamStatus", null, txtUser.text, "stop");						
			break;
			
		case "NetStream.Buffer.Full":
			break;

		default:
			simpleLabel.text= evt.info.code;
		}		    	

	}

        private function asyncErrorHandler(event:AsyncErrorEvent):void {
            // ignore AsyncErrorEvent events.
        }
        

        private function securityErrorHandler(event:SecurityErrorEvent):void {
            	simpleLabel.text= "securityErrorHandler: " + event;
        }
        
        
	public function callState(msg:String):* {
		simpleLabel.text="Call State = " + msg;

		if (msg == "onUaCallClosed" || msg == "onUaCallCancelled" || msg == "onUaCallFailed") {
			incomingNetStream.play(false); 
			outgoingNetStream.attachAudio(null);
			outgoingNetStream.publish(false);
			
			isConnected = false;
		}
	}
	

	public function incoming(source:String, sourceName:String, destination:String, destinationName:String):*  {
		simpleLabel.text= "Incoming Call : " + (sourceName == "" ? source : sourceName);
	}
	

	public function connected(publishName:String, playName:String):* {
		simpleLabel.text= "Connected Call: " + publishName;
		
		incomingNetStream = new NetStream(netConnection);
		var client1:Object = new Object(); 
		client1.onMetaData = onMetaData; 
		client1.onBWDone = onBWDone; 		
		incomingNetStream.client = client1;		
		incomingNetStream.addEventListener(NetStatusEvent.NET_STATUS, netStatus);
		incomingNetStream.addEventListener(AsyncErrorEvent.ASYNC_ERROR, asyncErrorHandler);

		outgoingNetStream = new NetStream(netConnection);
		var client2:Object = new Object(); 
		client2.onMetaData = onMetaData; 
		client2.onBWDone = onBWDone; 		
		outgoingNetStream.addEventListener(NetStatusEvent.NET_STATUS, netStatus);
		outgoingNetStream.addEventListener(AsyncErrorEvent.ASYNC_ERROR, asyncErrorHandler);			
		outgoingNetStream.attachAudio(mic);

		incomingNetStream.play(playName); 
		outgoingNetStream.publish(publishName, "live"); 	
		
		isConnected = true;
		
	}


	public function registrationSucess(msg:String):* {
		simpleLabel.text="Reg. Sucess = " + msg;
	}


	public function registrationFailure(msg:String):* {
		simpleLabel.text="Reg. Failure = " + msg;
	}


	public function doCall():void {
	
		if (txtInput.text != "") {
			netConnection.call("call", null, txtUser.text, txtInput.text);
			txtInput.text = "";
		} else {
			simpleLabel.text = "Please enter a phone number";	
		}
	}

	public function doCallChar(chr:String):void {
	
		if (isConnected) {
			netConnection.call("dtmf", null, txtUser.text, chr);
		}
		
		txtInput.text += chr;		
	}

	public function doHangUp():void {
		netConnection.call("hangup", null, txtUser.text);
		txtInput.text = "";			
	}		


	public function doAccept():void {
		netConnection.call("accept", null, txtUser.text);			
	}
	
	private function onMetaData(obj:Object):void {

	}

	private function onBWDone(obj:Object):void {

	}

]]>
</mx:Script>


<mx:SoundEffect id="dtmfOne" source="@Embed(source='/assets/dtmf/1.mp3')"/>
<mx:SoundEffect id="dtmfTwo" source="@Embed(source='/assets/dtmf/2.mp3')"/>
<mx:SoundEffect id="dtmfThree" source="@Embed(source='/assets/dtmf/3.mp3')"/>
<mx:SoundEffect id="dtmfFour" source="@Embed(source='/assets/dtmf/4.mp3')"/>
<mx:SoundEffect id="dtmfFive" source="@Embed(source='/assets/dtmf/5.mp3')"/>
<mx:SoundEffect id="dtmfSix" source="@Embed(source='/assets/dtmf/6.mp3')"/>
<mx:SoundEffect id="dtmfSeven" source="@Embed(source='/assets/dtmf/7.mp3')"/>
<mx:SoundEffect id="dtmfEight" source="@Embed(source='/assets/dtmf/8.mp3')"/>
<mx:SoundEffect id="dtmfNine" source="@Embed(source='/assets/dtmf/9.mp3')"/>
<mx:SoundEffect id="dtmfZero" source="@Embed(source='/assets/dtmf/0.mp3')"/>    	
<mx:SoundEffect id="dtmfHash" source="@Embed(source='/assets/dtmf/hash.mp3')"/>
<mx:SoundEffect id="dtmfStar" source="@Embed(source='/assets/dtmf/star.mp3')"/>
	

<mx:TextInput x="110" y="12" width="190" text="sip:1000@192.168.1.20" id="txtInput" fontSize="10" height="22"/>

<mx:Button x="110" y="40" label="1" id="cmdOne" click="doCallChar('1');" width="30" height="30" mouseDownEffect="{dtmfOne}"/>
<mx:Button x="140" y="40" label="2" id="cmdTwo" click="doCallChar('2');" width="30" height="30" mouseDownEffect="{dtmfTwo}"/>
<mx:Button x="170" y="40" label="3" id="cmdThree" click="doCallChar('3');" width="30" height="30" mouseDownEffect="{dtmfThree}"/>
<mx:Button x="110" y="70" label="4" id="cmdFour" click="doCallChar('4');" width="30" height="30" mouseDownEffect="{dtmfFour}"/>
<mx:Button x="140" y="70" label="5" id="cmdFive" click="doCallChar('5');" width="30" height="30" mouseDownEffect="{dtmfFive}"/>
<mx:Button x="170" y="70" label="6" id="cmdSix" click="doCallChar('6');" width="30" height="30" mouseDownEffect="{dtmfSix}"/>
<mx:Button x="110" y="100" label="7" id="cmdSeven" click="doCallChar('7');" width="30" height="30" mouseDownEffect="{dtmfSeven}"/>
<mx:Button x="140" y="100" label="8" id="cmdEight" click="doCallChar('8');" width="30" height="30" mouseDownEffect="{dtmfEight}"/>
<mx:Button x="170" y="100" label="9" id="cmdNine" click="doCallChar('9');" width="30" height="30" mouseDownEffect="{dtmfNine}"/>
<mx:Button x="110" y="130" label="*" id="cmdStar" click="doCallChar('*');" width="30" height="30" mouseDownEffect="{dtmfStar}"/>
<mx:Button x="140" y="130" label="0" id="cmdZero" click="doCallChar('0');" width="30" height="30" mouseDownEffect="{dtmfZero}"/>
<mx:Button x="170" y="130" label="#" id="cmdPound" click="doCallChar('#');" width="30" height="30" mouseDownEffect="{dtmfHash}"/>
<mx:Button x="110" y="160" label="Call" id="cmdCall" click="doCall();" width="90" fontSize="9" height="20"/>
<mx:Button x="110" y="180" label="Hang Up" width="90" click="doHangUp();" id="cmdHangUp" height="20" fontSize="9"/>
<mx:Button x="110" y="200" label="Pickup" width="90" click="doAccept();" id="cmdAccept" height="20" fontSize="9"/>

<mx:Label x="5" y="10" fontSize="10" text="Red5 URL"/>
<mx:TextInput x="5" y="30" width="90" text="rtmp:/sip" id="txtRed5URL" fontSize="10" height="20"/>

<mx:Label x="5" y="50" fontSize="10" text="SIP Username"/>
<mx:TextInput x="5" y="70" width="90" text="1001" id="txtUser" fontSize="10" height="20"/>

<mx:Label x="5" y="90" fontSize="10" text="SIP Password"/>
<mx:TextInput x="5" y="110" width="90" text="1001" id="txtPassword" displayAsPassword="true" fontSize="10" height="20"/>

<mx:Label x="5" y="130" fontSize="10" text=" SIP Realm"/>
<mx:TextInput x="5" y="150" width="90" text="192.168.1.20" id="txtRealm" fontSize="10" height="20"/>

<mx:Label x="5" y="170" fontSize="10" text="SIP Server"/>
<mx:TextInput x="5" y="190" width="90" text="192.168.1.20" id="txtServer" fontSize="10" height="20"/>

<mx:Button x="5" y="210" label="Connect" id="cmdConnect" click="connect();" width="90" fontSize="10" height="20"/>
<mx:Button x="5" y="240" label="Register" id="cmdRegister" click="register();" width="90" fontSize="10" height="20"/>
<mx:Label x="5" y="260" id="simpleLabel" fontSize="10" text=""/>

</mx:Application>
